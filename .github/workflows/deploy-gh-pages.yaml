name: "deploy-github-pages"

on:
  push:
    branches: ["main"]

env:
  G_DIST_ARTIFACT_NAME: "yscope-log-viewer-dist-${{github.sha}}"

permissions: {}

concurrency:
  group: "${{github.workflow}}-${{github.ref}}"

  # Cancel in-progress jobs for efficiency
  cancel-in-progress: true

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
        with:
          persist-credentials: false
          submodules: "recursive"

      - uses: "actions/setup-node@v4"
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: "./package-lock.json"

      - run: "npm install"

      - run: "npm run build"

      - name: "Upload static files as artifact"
        uses: "actions/upload-pages-artifact@v3"
        with:
          name: "${{env.G_DIST_ARTIFACT_NAME}}"
          path: "./dist"

  release:
    needs: "build"
    runs-on: "ubuntu-latest"
    permissions:
      # To create a release
      contents: "write"
    steps:
      - uses: "actions/checkout@v4"
        with:
          persist-credentials: false
          submodules: "recursive"

      - name: "Determine release names"
        id: "names"
        run: |
          PACKAGE_VERSION=$(jq -r ".version" "package.json")
          BRANCH_NAME=$(echo "${GITHUB_REF}" | sed 's|refs/heads/||')
          DATE=$(date +'%Y%m%d')
          SHORT_SHA=$(git rev-parse --short HEAD)

          echo "VERSION=${PACKAGE_VERSION}-${BRANCH_NAME}+${DATE}.${SHORT_SHA}" >> "$GITHUB_OUTPUT"
          echo "DIST_TAR_NAME=dist-${{steps.names.outputs.VERSION}}.tar" >> "$GITHUB_OUTPUT"

      - uses: "actions/download-artifact@v4"
        with:
          name: "${{env.G_DIST_ARTIFACT_NAME}}"

      - name: "Rename build artifact"
        run: "mv 'artifact.tar' '${{steps.names.outputs.DIST_TAR_NAME}}'"

      - name: "Create GitHub Release"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          gh release create "v${{steps.names.outputs.VERSION}}" \
            "${{steps.names.outputs.DIST_TAR_NAME}}" \
            --fail-on-no-commits \
            --generate-notes \
            --title "Release v${{steps.names.outputs.VERSION}}"

  deploy:
    needs: "release"
    permissions:
      # To deploy to Pages
      pages: "write"

      # To request a JWT from GitHub for certifying the origin of the deployment
      id-token: "write"
    runs-on: "ubuntu-latest"
    environment:
      name: "github-pages"
      url: "${{steps.deployment.outputs.page_url}}"
    steps:
      - name: "Deploy to GitHub Pages"
        id: "deployment"
        uses: "actions/deploy-pages@v4"
        with:
          artifact_name: "${{env.G_DIST_ARTIFACT_NAME}}"
